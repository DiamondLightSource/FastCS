# yaml-language-server: $schema=values.schema.json

# Default values for fastcs-instance chart.
#
# helm-schema annotations describe the schema for values files.
# see https://github.com/dadav/helm-schema
# If there is no annotation, the type is inferred from the default value.
# Generate the values schema with `generate-schema.sh`
#
# This file itself adheres to the schema it describes (to help writing the annotations).

# @schema
# required: false
# title: Container Image URI
# type: [string, null]
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/image
# @schema
image:

# location of config folder (defaults to be the same as C++ IOCs)
iocFolder: /epics/ioc
iocConfig: /epics/ioc/config

# ports to expose on the service
ca_server_port: 5064
pva_server_port: 5075

# CIDR for services addresses.
# Used by allocateIpFromName to allocate a fixed cluster IP for the service.
# The default is the same for all DLS clusters.
baseIp: 10.96.0.0/12
# @schema
# title: Override for the cluster IP - only needed if allocateIpFromName clashes
# type: [string, null]
# format: ipv4
# @schema
clusterIP:

# The service will be configured for Channel Access and PVA. Here you can override
# the ports and also make this a LoadBalancer service if required.
service:
  type: ClusterIP
  ca_port: 5064
  pva_port: 5075

# @schema
# title: extra containers
# description: adds addtional containers specified by image and startCommand
# type: array
# items:
#   type: object
#   properties:
#     name:
#       type: string
#       description: A name for the additional container
#     image:
#       type: string
#       format: image
#       description: Container image URI
#     startCommand:
#       type: array
#       description: Command to run in the container (as array of arguments)
#   required: [name, image, startCommand]
#   additionalProperties: false
# @schema
extra_containers: []

# @schema
# title: Pod Annotations
# type: object
# @schema
podAnnotations: {}
# @schema
# title: Pod Labels
# type: object
# @schema
podLabels: {}

# @schema
# title: Pod Security Context
# type: object
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext
# @schema
podSecurityContext: {}

# @schema
# title: Container Security Context
# type: object
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext
# @schema
securityContext: {}

# @schema
# title: Resource limits and requests
# type: object
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements
# @schema
resources: {}

# @schema
# title: livenessProbe
# type: object
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.Probe
# @schema
livenessProbe: {}
# @schema
# title: readinessProbe
# type: object
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.Probe
# @schema
readinessProbe: {}

# @schema
# title: volumes
# description: Additional volumes to mount in the output Deployment definition.
# type: array
# items:
#   type: object
#   $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.Volume
# @schema
volumes: []

# @schema
# title: volumeMounts
# type: array
# items:
#   type: object
#   $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.VolumeMount
# @schema
volumeMounts: []

# @schema
# title: nodeSelector
# description: Node selector for the pod
# type: object
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.NodeSelector
# @schema
nodeSelector: {}

# @schema
# title: tolerations
# description: Tolerations for the pod
# type: array
# items:
#   type: object
#   $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration
# @schema
tolerations: []

# @schema
# title: affinity
# description: Affinity for the pod
# type: object
# $ref: https://kubernetesjsonschema.dev/v1.18.1/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity
# @schema
affinity: {}
